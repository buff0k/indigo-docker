version: "3.3"

services:

  nginx:
    build: ./nginx
    ports:
      - 8100:80
    volumes:
      - static_volume:/app/src/indigo
    depends_on:
      - app
    restart: "on-failure"

  db:
    image: postgres
    restart: "on-failure"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}

  app:
    build: .
    restart: on-failure
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgres://${DATABASE_USER}:${DATABASE_PASSWORD}@db:5432/${DATABASE_NAME}
      - DISABLE_COLLECTSTATIC=1
      - DJANGO_DEBUG=False
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_S3_BUCKET=${AWS_S3_BUCKET}
      - DJANGO_DEFAULT_FROM_EMAIL=${DJANGO_DEFAULT_FROM_EMAIL}
      - DJANGO_EMAIL_HOST=${DJANGO_EMAIL_HOST}
      - DJANGO_EMAIL_HOST_PASSWORD=${DJANGO_EMAIL_HOST_PASSWORD}
      - DJANGO_EMAIL_HOST_PORT=${DJANGO_EMAIL_HOST_PORT}
      - DJANGO_EMAIL_HOST_USER=${DJANGO_EMAIL_HOST_USER}
      - GOOGLE_ANALYTICS_ID=${GOOGLE_ANALYTICS_ID}
      - SUPPORT_EMAIL=${SUPPORT_EMAIL}
      - NOTIFICATION_EMAILS_BACKGROUND=True
    command: sh -c "python manage.py makemigrations &&
                    python manage.py migrate &&
                    python manage.py update_countries_plus &&
                    python manage.py loaddata languages_data.json.gz &&
                    python manage.py collectstatic &&
                    gunicorn indigo.wsgi --bind 0.0.0.0:8020"
    volumes:
      - .:/usr/src/app:rw
      - static_volume:/app/src/indigo
    image: indigo
    expose:
      - 8020
    depends_on:
      - db

volumes:
  postgres_data:
  static_volume:
