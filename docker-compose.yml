version: '3.3'

services:
  database:
    image: postgres:bullseye
    restart: on-failure
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./.env
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_PORT=${DATABASE_PORT}

  indigo:
    build: ./indigo
    restart: on-failure
    env_file:
      - ./.env
    environment:
      - DATABASE_URL=postgres://${DATABASE_USER}:${DATABASE_PASSWORD}@database:${DATABASE_PORT}/${DATABASE_NAME}
      - DISABLE_COLLECTSTATIC=1
      - DJANGO_DEBUG=False
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_S3_BUCKET=${AWS_S3_BUCKET}
      - DJANGO_DEFAULT_FROM_EMAIL=${DJANGO_DEFAULT_FROM_EMAIL}
      - DJANGO_EMAIL_HOST=${DJANGO_EMAIL_HOST}
      - DJANGO_EMAIL_HOST_PASSWORD=${DJANGO_EMAIL_HOST_PASSWORD}
      - DJANGO_EMAIL_HOST_PORT=${DJANGO_EMAIL_HOST_PORT}
      - DJANGO_EMAIL_HOST_USER=${DJANGO_EMAIL_HOST_USER}
      - GOOGLE_ANALYTICS_ID=${GOOGLE_ANALYTICS_ID}
      - SUPPORT_EMAIL=${SUPPORT_EMAIL}
      - NOTIFICATION_EMAILS_BACKGROUND=True
    command: gunicorn indigo.wsgi:application --bind 0.0.0.0:5000
    depends_on:
      - database
    expose:
      - 5000

  nginx:
    build: ./nginx
    restart: on-failure
    ports:
      - 1234:80
    depends_on:
      - indigo

volumes:
  postgres_data:
